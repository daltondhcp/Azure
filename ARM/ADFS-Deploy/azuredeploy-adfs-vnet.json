{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vpnType": {
      "type": "string",
      "metadata": {
        "description": "Route based or policy based"
      },
      "defaultValue": "RouteBased",
      "allowedValues": [
        "RouteBased",
        "PolicyBased"
      ]
    },
    "localGatewayName": {
      "type": "string",
      "defaultValue": "localGateway",
      "metadata": {
        "description": "Aribtary name for gateway resource representing "
      }
    },
    "localGatewayIpAddress": {
      "type": "string",
      "defaultValue": "1.2.3.4",
      "metadata": {
        "description": "Public IP of your local firewall"
      }
    },
    "localAddressPrefix": {
      "type": "string",
      "defaultValue": "10.50.0.0/16",
      "metadata": {
        "description": "CIDR block representing the address space of the OnPremise VPN network's Subnet"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "azureVnet",
      "metadata": {
        "description": "Arbitrary name for the Azure Virtual Network"
      }
    },
    "azureVNetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.50.0.0/16",
      "metadata": {
        "description": "CIDR block representing the address space of the Azure VNet"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Internal",
      "metadata": {
        "description": "Aribtrary name for the Azure Subnet"
      }
    },
    "dmzSubnetName": {
      "type": "string",
      "defaultValue": "DMZ",
      "metadata": {
        "description": "Aribtrary name for the Azure Subnet"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.50.1.0/24",
      "metadata": {
        "description": "CIDR block for VM subnet, subset of azureVNetAddressPrefix address space"
      }
    },

    "dmzSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.50.2.0/24",
      "metadata": {
        "description": "CIDR block for VM subnet, subset of azureVNetAddressPrefix address space"
      }
    },
    "gatewaySubnetPrefix": {
      "type": "string",
      "defaultValue": "10.50.3.250/29",
      "metadata": {
        "description": "CIDR block for gateway subnet, subsset of azureVNetAddressPrefix address space"
      }
    },
    "gatewayPublicIPName": {
      "type": "string",
      "defaultValue": "azureGatewayIP",
      "metadata": {
        "description": "Aribtary name for public IP resource used for the new azure gateway"
      }
    },
    "gatewayName": {
      "type": "string",
      "defaultValue": "azureGateway",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "connectionName": {
      "type": "string",
      "defaultValue": "Azure2OnPrem",
      "metadata": {
        "description": "Arbitrary name for the new connection between Azure VNet and other network"
      }
    },
    "extlbname": {
      "type": "string",
      "defaultvalue": "sts-external",
      "metadata": {
        "description": "Name of the external load balancer for WAP"
      }
    },
    "intlbIP": {
      "type": "string",
      "defaultvalue": "10.50.1.100",
      "metadata": {
        "description": "Name of the internal load balancer for ADFS"
      }
    },
    "intlbname": {
      "type": "string",
      "defaultvalue": "sts-internal",
      "metadata": {
        "description": "Name of the internal load balancer for ADFS"
      }
    },
    "dmzNSGName": {
      "type": "string",
      "defaultValue": "dmz-nsg",
      "metadata": {
        "description": "Name of the DMZ Network Security Group"
      }
    },
    "sharedKey": {
      "type": "securestring",
      "defaultvalue": "mysecurePSK",
      "metadata": {
        "description": "Shared key (PSK) for IPSec tunnel"
      }
    },
    "DNSServerAddress": {
      "type": "array",
      "defaultValue": "4.2.2.2,4.2.2.1",
      "metadata": {
        "description": "The DNS address(es) of the DNS Server(s) used by the VNET"
      }
    }
  },
  "variables": {
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "gatewaySubnetRef": "[concat(variables('vnetID'),'/subnets/','GatewaySubnet')]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "api-version": "2015-06-15"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('dmzNSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "https_in",
            "properties": {
              "description": "Allow HTTPS",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "http_out",
            "properties": {
              "description": "Allow HTTP Outbound",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Outbound"
            }
          },
          {
            "name": "dns_out",
            "properties": {
              "description": "Allow dns Outbound",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "53",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 103,
              "direction": "Outbound"
            }
          },
          {
            "name": "https_out",
            "properties": {
              "description": "Allow HTTPS Outbound",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[parameters('localGatewayName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "localNetworkAddressSpace": {
          "addressPrefixes": [
            "[parameters('localAddressPrefix')]"
          ]
        },
        "gatewayIpAddress": "[parameters('localGatewayIpAddress')]"
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "name": "[parameters('connectionName')]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('gatewayName'))]",
        "[concat('Microsoft.Network/localNetworkGateways/', parameters('localGatewayName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('gatewayName'))]"
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localGatewayName'))]"
        },
        "connectionType": "IPsec",
        "routingWeight": 10,
        "sharedKey": "[parameters('sharedKey')]"
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('dmzNsgName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('azureVNetAddressPrefix')]"
          ]
        },
        "dhcpOptions": {
          "dnsServers": "[parameters('DNSServerAddress')]"
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          },
          {
            "name": "[parameters('dmzSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('dmzSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('dmzNSGName'))]"
              }
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[parameters('gatewaySubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('gatewayPublicIPName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('extlbname'),'-pip')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[parameters('extlbname')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', concat(parameters('extlbname'),'-pip'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontend",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('extlbname'),'-pip'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('extlbname')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('extlbname')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('extlbname')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "idleTimeoutInMinutes": 15
            },
            "Name": "lbrule"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Http",
              "requestPath": "/adfs/probe",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[parameters('intlbName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAddress": "10.0.10.100",
              "privateIPAllocationMethod": "Static"
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('intlbName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('intlbName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers',parameters('intlbName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "idleTimeoutInMinutes": 15
            },
            "Name": "lbrule"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Http",
              "requestPath": "/adfs/probe",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('api-version')]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[parameters('gatewayName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('gatewayPublicIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gatewaySubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('gatewayPublicIPName'))]"
              }
            },
            "name": "vnetGatewayConfig"
          }
        ],
        "gatewayType": "Vpn",
        "vpnType": "[parameters('vpnType')]",
        "enableBgp": "false"
      }
    }
  ]

}

